#!/usr/bin/env ruby
# encoding: utf-8

path = File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
require File.join(File.dirname(File.expand_path(path)), "console/colorize.rb")

class Zip
  include Console::Colorize

  INFO = "Create package from your repository\nUsage: git zip PATH"

  def initialize(args)
    if args.length == 0
      puts INFO
      exit
    end
    @path, _ = args
  end

  def run
    # print all files in git changelist
    list_of_untracked_files = `git status --untracked-files=no -s`

    # for non-empty list
    (list_of_untracked_files.length == 0) ? head(@path) : stash(@path)
  end

  def stash(path)
    puts blue{ 'Building from modified repository' }
    puts `git status --untracked-files=no -sb`
    `git archive --format zip --output "#{path}" \`git stash create\``
  end
  private :stash

  def head(path)
      puts green{ 'Building from updated repository' }
    `git archive --format zip --output "#{path}" HEAD`
  end
  private :head
end

Zip.new(ARGV).run
